from fastapi import APIRouter, Depends, HTTPException
from fastapi import FastAPI
from pydantic import BaseModel
import re
import google.generativeai as genai

protected_router = APIRouter()

model = genai.GenerativeModel("gemini-1.5-flash")
genai.configure(api_key="AIzaSyC-RoDgkf2lpcQlCbeoQKFK39LVhBO7Oi0")

class ChatInput(BaseModel):
    message: str

@protected_router.post("/chat2")
def chat_with_gemini(data: ChatInput):
    try:
        # ğŸ“Œ Sistem Ã¶n prompt'u
        system_instruction = """
Whaleer adÄ±nda bir algoritmik al-sat platformunda Ã§alÄ±ÅŸan bir yapay zeka strateji danÄ±ÅŸmanÄ±sÄ±n.
Whaleer kullanÄ±cÄ±larÄ± strateji geliÅŸtirmek iÃ§in Python tabanlÄ± veri analizi yapar (Frontend iÃ§in next.js yapÄ±sÄ±nÄ± kullanÄ±r).
Kodlar genellikle Pandas dataframe'i Ã¼zerinden Ã§alÄ±ÅŸÄ±r ve `df` adÄ±nda bir veri seti kullanÄ±lÄ±r.

AÅŸaÄŸÄ±daki kurallara gÃ¶re kullanÄ±cÄ±ya yardÄ±mcÄ± ol:

- Stratejiler `position` (pozisyon sinyali: 1 ve -1 deÄŸerleri arsÄ±nda deÄŸiÅŸebilir) ve `percentage` (risk yÃ¼zdesi) sÃ¼tunlarÄ±nÄ± Ã¼retmelidir.
- Teknik analiz gÃ¶stergeleri kullanÄ±labilir.
- Strateji sonunda gÃ¶rsel sonuÃ§ oluÅŸturmak iÃ§in `mark(df)` ve `plot(df.tail(250), commission)` gibi fonksiyonlar olabilir.
- Kodda temiz veri iÅŸlemleri yapÄ±lmalÄ±, `fillna`, `rolling`, `ewm` gibi yÃ¶ntemler kullanÄ±labilir.
- Strateji mantÄ±ÄŸÄ± hem aÃ§Ä±klanmalÄ± hem de kodla desteklenmelidir.
"""

        # KullanÄ±cÄ±nÄ±n mesajÄ±nÄ± sistem prompt'una ekle
        full_prompt = f"{system_instruction.strip()}\n\nKullanÄ±cÄ± sorusu:\n{data.message.strip()}"

        # AI modelinden yanÄ±t al
        response = model.generate_content(full_prompt)
        full_text = response.text

        # Kod ve baÅŸlÄ±k eÅŸleÅŸtirme regex
        pattern = r"(?:\*\*(.*?)\*\*\s*)?```(?:\w+)?\n(.*?)```"
        matches = re.findall(pattern, full_text, re.DOTALL)

        # Kod bloklarÄ± listesi
        codes = []
        for idx, match in enumerate(matches):
            title, code = match
            codes.append({
                "title": title.strip() if title else f"Kod {idx + 1}",
                "code": str(code).strip()
            })

        # AÃ§Ä±klamayÄ± kodlardan ayÄ±r
        explanation = re.sub(pattern, "", full_text, flags=re.DOTALL).strip()

        return {
            "explanation": explanation,
            "codes": codes
        }

    except Exception as e:
        return {"error": str(e)}



    